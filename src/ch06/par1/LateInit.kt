package ch06.par1

import org.junit.jupiter.api.BeforeAll
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.Assertions

/*
* Котлин требует, чтобы все свойства класса были инициализированы в конструкторе.
* И если свойство не поддерживает null, то нужно явно передать значение свойству.
* В ряде случаев (например, во многих фреймворках) инициализация свойств объекта выполняется ПОСЛЕ создания объекта
* (пустого, с дефолтными значениями).
*
* Вариант в стиле Java: использовать тип данных с поддержкой null, изначально при создании объекта свойство будет
* инициализировано null, а затем уже фактически инициализировать свойство в отдельном методе.
*
* Вариант с отложенной инициализацией:
* модификатор lateinit указывает, что свойство поддерживает отложенную инициализацию:
* - оно не может быть nullable типом
* - оно не должно быть инициализировано сразу
* - оно может быть только изменяемым (var), т.к. значение устанавливается после создания объекта конструктором
* - к нему нельзя обратиться до того как будет проведена инициализация
* */
class MyService {
    fun performAction() = "foo"
}

class MyTest {

    private lateinit var myService: MyService

    @BeforeAll fun setUp() { // фактическая инициализация
        myService = MyService()
    }

    @Test fun testAction() {
        Assertions.assertEquals("foo", myService.performAction())
    }
}