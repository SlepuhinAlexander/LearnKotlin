package ch04.par1

// модификаторы наследования

// сам интерфейс и все его функции по умолчанию являются открытыми и не могут быть сделаны финальными
interface Clickable2 {
    // функция интерфейса без реализации автоматически является абстрактной, модификатор указывать не обязательно
    /*abstract*/ fun click()
    // функция интерфейса с реализацией не может быть абстрактной.
    fun showOff() = println("I'm Clickable2!")
}

// классы по умолчанию финальные. чтобы разрешить наследование класса нужно указать что он открыт.
open class RichButton : Clickable2 {
    // функции класса по умолчанию финальные
    fun disable() {
    }

    // чтобы разрешить переопределение функции, нужно указать что она открыта
    open fun animate() {
    }

    // переопределённая функция по умолчанию тоже открыта
    override fun click() {
    }
}

open class ToggleButton: RichButton() {
    // переопределённая функция по умолчанию открыта. чтобы запретить её дальнейшее переопределение нужно указать
    // модификатор final
    final override fun animate() {
        println("animated!")
    }
}

// аналогично понятию абстрактного класса в Java
abstract class Animated {
    // абстрактные функции открыты по умолчанию. обязательно должны быть переопределены в классе-наследнике
    abstract fun animate()

    open fun stopAnimating() {
    }

    // конкретная функция в абстрактном классе по-прежнему закрыта по умолчанию
    fun animateTwice() {
    }
}